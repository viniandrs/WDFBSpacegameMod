import { Hero, Enemy, Laser } from "./modules/GameObjects";
import { listeners } from ""
import { EventEmitter } from "./modules/EventEmitter";
import { Cooldown } from "./modules/Cooldown";

//--------------------------------------------------------------------
// constants

const Messages = {
    KEY_EVENT_UP: "KEY_EVENT_UP",
    KEY_EVENT_DOWN: "KEY_EVENT_DOWN",
    KEY_EVENT_LEFT: "KEY_EVENT_LEFT",
    KEY_EVENT_RIGHT: "KEY_EVENT_RIGHT",
    KEY_EVENT_SPACE: "KEY_EVENT_SPACE",
    COLLISION_ENEMY_LASER: "COLLISION_ENEMY_LASER",
    COLLISION_ENEMY_HERO: "COLLISION_ENEMY_HERO",
    GAME_END_LOSS: "GAME_END_LOSS",
    GAME_END_WIN: "GAME_END_WIN",
    KEY_EVENT_ENTER: "KEY_EVENT_ENTER"
};

let heroImg,
    enemyImg,
    lifeImg,
    laserImg,
    laserExpImg,
    canvas, ctx,
    hero,
    gameLoopId,
    eventEmitter = new EventEmitter();

let onKeyDown = function (e) {
    switch (e.keyCode) {
        case 37:
        case 39:
        case 38:
        case 40: // Arrow keys
        case 32:
            e.preventDefault();
            break; // Space
        default:
            break; // do not block other keys
    }
};

window.addEventListener('keydown', onKeyDown);

window.addEventListener("keyup", (evt) => {
    if (evt.key === "ArrowUp") {
        eventEmitter.emit(Messages.KEY_EVENT_UP);
    } else if (evt.key === "ArrowDown") {
        eventEmitter.emit(Messages.KEY_EVENT_DOWN);
    } else if (evt.key === "ArrowLeft") {
        eventEmitter.emit(Messages.KEY_EVENT_LEFT);
    } else if (evt.key === "ArrowRight") {
        eventEmitter.emit(Messages.KEY_EVENT_RIGHT);
    } else if (evt.keyCode === 32) {
        eventEmitter.emit(Messages.KEY_EVENT_SPACE);
    } else if (evt.key === "Enter") {
        eventEmitter.emit(Messages.KEY_EVENT_ENTER);
    }
});

import addListeners from "./modules/addListeners";

window.onload = async () => {
    canvas = document.getElementById("canvas");
    ctx = canvas.getContext("2d");

    // loading assets
    heroImg = await loadTexture("assets/player.png");
    enemyImg = await loadTexture("assets/enemyShip.png");
    laserImg = await loadTexture("assets/laserRed.png");
    laserExpImg = await loadTexture("assets/laserRedShot.png");
    lifeImg = await loadTexture("assets/life.png");

    addListeners();

    // drawing the sprites on the screen

    createEnemies(canvas);
    createHero();

    // creating the game loop
    gameLoopId = setInterval(() => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = "black";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // process collisions
        updateGameObjects();

        // update screen info
        drawPoints();
        drawLife();
        drawGameObjects(ctx);
    }, 100)

};